{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","time","setTime","start","useRef","pause","reset","useEffect","current","pause$","fromEvent","start$","buff$","pipe","debounceTime","merge","buffer","map","list","length","filter","x","mapTo","count","value","speed","startWith","scan","state","curr","tap","switchMap","interval","_","NEVER","subscribe","style","display","flexDirection","Date","toISOString","substr","id","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTA4EeA,EAxEH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTC,EADS,KACHC,EADG,KAGVC,EAAQC,iBAA0B,MAClCC,EAAQD,iBAA0B,MAClCE,EAAQF,iBAA0B,MAuDxC,OArDAG,qBAAU,WAOR,GAAIJ,EAAMK,SAAWL,GAASE,EAAMG,SAAWF,EAAME,QAAS,CAC5D,IAAMC,EAASC,YAAUL,EAAMG,QAAS,SAClCG,EAASD,YAAUP,EAAMK,QAAS,SAElCI,EAAQH,EAAOI,KACnBC,YAAa,MAGAC,YACbJ,EAAOE,KACLG,YAAOL,EAAOE,KACZC,YAAa,OAEfG,aAAI,SAAAC,GACF,OAAOA,EAAKC,UAEdC,aAAO,SAAAC,GAAC,OAAU,IAANA,KACZC,YAAM,CAAEC,OAAO,EAAOC,MAAO,EAAGC,MAAO,KAEzCd,EAAOE,KAAKS,YAAM,CAAEC,OAAO,KAC3Bd,EAAOI,KACLG,YAAOJ,GACPK,aAAI,SAAAC,GACF,OAAOA,EAAKC,UAEdC,aAAO,SAAAC,GAAC,OAAU,IAANA,KACZC,YAAM,CAAEC,OAAO,KACjBd,EAAOI,KAAKS,YAAM,CAAEC,OAAO,KAC3Bb,YAAUJ,EAAME,QAAS,SAASK,KAAKS,YAAM,CAAEE,MAAO,MAG/BX,KACvBa,YAtCgB,CAClBH,OAAO,EACPE,MAAO,IACPD,MAAO,IAoCLG,aAAK,SAACC,EAAYC,GAAb,mBAAC,eAAgCD,GAAUC,KAAS,GACzDC,aAAI,SAACF,GAAD,OAAgB1B,EAAQ0B,EAAMJ,YAClCO,aAAU,SAACH,GAAD,OACRA,EAAML,MAAQS,YAASJ,EAAMH,OAAOZ,KAClCiB,aAAI,SAAAG,GAAC,OAAI/B,EAAQ0B,EAAMJ,aACrBU,QAIEC,eAEX,IAGD,qCACE,qBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,OAA9C,SAAwD,IAAIC,KAAY,IAAPtC,GAAauC,cAAcC,OAAO,GAAI,KACvG,sBAAKC,GAAG,WAAR,UACE,wBAAQA,GAAG,QAAQC,IAAKxC,EAAxB,0BACA,wBAAQuC,GAAG,QAAQC,IAAKtC,EAAxB,mBACA,wBAAQqC,GAAG,QAAQC,IAAKrC,EAAxB,0BCjERsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.51915509.chunk.js","sourcesContent":["import { useRef, useEffect, useState } from \"react\"\nimport { fromEvent, interval, merge, NEVER } from 'rxjs';\nimport { mapTo, scan, startWith, switchMap, tap, buffer, debounceTime, map, filter } from 'rxjs/operators';\n\nconst App = () => {\n  const [time, setTime] = useState(0);\n\n  const start = useRef<HTMLButtonElement>(null);\n  const pause = useRef<HTMLButtonElement>(null);\n  const reset = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    const startValues = {\n      count: false,\n      speed: 1000,\n      value: 0,\n    }\n\n    if (start.current && start && pause.current && reset.current) {\n      const pause$ = fromEvent(pause.current, 'click');\n      const start$ = fromEvent(start.current, 'click');\n\n      const buff$ = pause$.pipe(\n        debounceTime(250),\n      )\n\n      const events = merge(\n        start$.pipe(\n          buffer(start$.pipe(\n            debounceTime(250),\n          )),\n          map(list => {\n            return list.length;\n          }),\n          filter(x => x === 2),\n          mapTo({ count: false, value: 0, speed: 0 }),\n        ),\n        start$.pipe(mapTo({ count: true })),\n        pause$.pipe(\n          buffer(buff$),\n          map(list => {\n            return list.length;\n          }),\n          filter(x => x === 2),\n          mapTo({ count: false })),\n        pause$.pipe(mapTo({ count: true })),\n        fromEvent(reset.current, 'click').pipe(mapTo({ value: 0 })),\n      );\n\n      const stopWatch = events.pipe(\n        startWith(startValues),\n        scan((state: any, curr): any => ({ ...state, ...curr }), 0),\n        tap((state: any) => setTime(state.value++)),\n        switchMap((state: any) =>\n          state.count ? interval(state.speed).pipe(\n            tap(_ => setTime(state.value++)),\n          ) : NEVER\n        )\n      );\n\n      stopWatch.subscribe();\n    }\n  }, []);\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>{new Date(time * 1000).toISOString().substr(11, 8)}</div>\n      <div id=\"controls\">\n        <button id=\"start\" ref={start}>Start / Stop</button>\n        <button id=\"pause\" ref={pause}>pause</button>\n        <button id=\"reset\" ref={reset}>reset</button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}