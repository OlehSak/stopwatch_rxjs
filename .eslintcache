[{"C:\\Users\\Shini\\source\\repos\\stopwatch_rxjs\\src\\App.tsx":"1"},{"size":1423,"mtime":1610833186124,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1rwx90v","C:\\Users\\Shini\\source\\repos\\stopwatch_rxjs\\src\\App.tsx",["7","8","9","10","11","12","13"],"import React, { useRef, useEffect } from \"react\"\nimport { fromEvent, interval, merge, noop, NEVER } from 'rxjs';\nimport { map, mapTo, scan, startWith, switchMap, tap } from 'rxjs/operators';\n\nconst App = () => {\n  const counter = useRef<HTMLElement>(null);\n\n  const start = useRef<HTMLButtonElement>(null);\n  const pause = useRef<HTMLButtonElement>(null);\n  const reset = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (start && pause && reset && counter && start.current && pause.current && reset.current && counter.current) {\n      const events$ = merge(\n        fromEvent(start.current, 'click').pipe(mapTo({ count: true })),\n        fromEvent(pause.current, 'click').pipe(mapTo({ count: false })),\n        fromEvent(reset.current, 'click').pipe(mapTo({ value: 1 })),\n      );\n\n      const setValue = (val: number) => {\n        if (null !== counter.current) {\n          (counter.current.innerText = val.toString());\n        }\n      }\n\n      const stopWatch$ = events$.pipe(\n        startWith({value: 0, count: false}),\n          map(state => console.log(state))\n      );\n\n      stopWatch$.subscribe();\n    }\n  }, []);\n\n  return (\n    <>\n      <div id=\"counter\">0</div>\n      <div id=\"controls\">\n        <button id=\"start\" ref={start}>start</button>\n        <button id=\"pause\" ref={pause}>pause</button>\n        <button id=\"reset\" ref={reset}>reset</button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":2,"column":21,"nodeType":"16","messageId":"17","endLine":2,"endColumn":29},{"ruleId":"14","severity":1,"message":"18","line":2,"column":38,"nodeType":"16","messageId":"17","endLine":2,"endColumn":42},{"ruleId":"14","severity":1,"message":"19","line":2,"column":44,"nodeType":"16","messageId":"17","endLine":2,"endColumn":49},{"ruleId":"14","severity":1,"message":"20","line":3,"column":22,"nodeType":"16","messageId":"17","endLine":3,"endColumn":26},{"ruleId":"14","severity":1,"message":"21","line":3,"column":39,"nodeType":"16","messageId":"17","endLine":3,"endColumn":48},{"ruleId":"14","severity":1,"message":"22","line":3,"column":50,"nodeType":"16","messageId":"17","endLine":3,"endColumn":53},{"ruleId":"14","severity":1,"message":"23","line":20,"column":13,"nodeType":"16","messageId":"17","endLine":20,"endColumn":21},"@typescript-eslint/no-unused-vars","'interval' is defined but never used.","Identifier","unusedVar","'noop' is defined but never used.","'NEVER' is defined but never used.","'scan' is defined but never used.","'switchMap' is defined but never used.","'tap' is defined but never used.","'setValue' is assigned a value but never used."]